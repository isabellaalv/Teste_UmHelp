// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UmHelp_Teste.WebApi.Contexts;

namespace UmHelp_Teste.WebApi.Migrations
{
    [DbContext(typeof(UmHelpContext))]
    [Migration("20200312171011_UmHelp_ContextDb")]
    partial class UmHelp_ContextDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UmHelp_Teste.WebApi.Domains.Descontos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BIT");

                    b.Property<int>("IdUsuarios");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarios");

                    b.ToTable("Desconto");
                });

            modelBuilder.Entity("UmHelp_Teste.WebApi.Domains.Pedidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdProduto");

                    b.Property<int>("IdUsuarios");

                    b.Property<decimal>("ValorProduto")
                        .HasColumnType("DECIMAL");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdUsuarios");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("UmHelp_Teste.WebApi.Domains.Produtos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeProduto")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("UmHelp_Teste.WebApi.Domains.TiposUsuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Titulo")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("TiposUsuarios");
                });

            modelBuilder.Entity("UmHelp_Teste.WebApi.Domains.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int?>("IdTipoUsuarios");

                    b.Property<int>("IdTiposUsuarios");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoUsuarios");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("UmHelp_Teste.WebApi.Domains.Descontos", b =>
                {
                    b.HasOne("UmHelp_Teste.WebApi.Domains.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("IdUsuarios")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UmHelp_Teste.WebApi.Domains.Pedidos", b =>
                {
                    b.HasOne("UmHelp_Teste.WebApi.Domains.Produtos", "Produtos")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UmHelp_Teste.WebApi.Domains.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("IdUsuarios")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UmHelp_Teste.WebApi.Domains.Usuarios", b =>
                {
                    b.HasOne("UmHelp_Teste.WebApi.Domains.TiposUsuarios", "TiposUsuarios")
                        .WithMany()
                        .HasForeignKey("IdTipoUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
